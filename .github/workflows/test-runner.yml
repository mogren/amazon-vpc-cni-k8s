# This is a basic workflow that is manually triggered

name: Test runner workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Test stuff
  test-permissions:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: Send greeting
        run: echo "Hello ${{ github.event.inputs.name }}"

      - name: Check sts
        run: |
          aws sts get-caller-identity

      - name: Check s3
        run: |
          aws s3 ls

      - name: Check docker login
        env:
          AWS_DEFAULT_REGION: us-west-2
        run: |
          eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)

      - name: Better docker login
        env:
          AWS_DEFAULT_REGION: us-west-2
        run: |
          AWS_ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT.dkr.ecr.us-west-2.amazonaws.com

      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -u golang.org/x/lint/golint
          go get -u golang.org/x/tools/cmd/goimports

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
